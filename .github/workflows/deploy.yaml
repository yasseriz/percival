name: Deploy Template

on:
  workflow_call:
    inputs:
      ARTIFACT-NAME:
        required: true
        type: string
      ENVIRONMENT-CODE:
        required: true
        type: string
      REGION-CODE:
        required: true
        type: string
jobs:
  deploy:
    env:
      ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
      BACKEND_CONFIG_PATH: "${{ github.workspace }}/operations/config"
      VARIABLE_FILE_PATH: "${{ github.workspace }}/operations/variables"
      TF_PATH: "${{ github.workspace }}/operations/provision"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.ARTIFACT-NAME }}
          path: operations/
      
      - name: Create tag from commit SHA
        run: |
          export VERSION=$(git rev-parse --short HEAD | cut -c1-7)
          echo "VERSION_TAG=${VERSION}" >> $GITHUB_ENV

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: '{"clientId": "${{ vars.ARM_CLIENT_ID }}", "clientSecret": "${{ secrets.ARM_CLIENT_SECRET }}", "subscriptionId": "${{ vars.ARM_SUBSCRIPTION_ID }}" ,"tenantId": "${{ vars.ARM_TENANT_ID }}"}'

      - name: Login to ACR
        uses: azure/docker-login@v2
        with:
          login-server: ${{ vars.DOCKER_REGISTRY_URL}}
          username: ${{ vars.DOCKER_REGISTRY_USERNAME}}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD}}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform format
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform init
        run: terraform init -input=false -backend-config="${{ env.BACKEND_CONFIG_PATH }}/backend.${{ inputs.ENVIRONMENT-CODE }}.${{ inputs.REGION-CODE }}.conf"
        working-directory: "${{ env.TF_PATH}}"

      - name: Terraform validate
        if: ${{ github.ref_name != 'refs/heads/main' }}
        run: terraform validate
        working-directory: "${{ env.TF_PATH}}"

      - name: Terraform plan
        run: terraform plan -out="tfplan-percival" -input=false -no-color -var-file="${{ env.VARIABLE_FILE_PATH }}/variables.${{ inputs.ENVIRONMENT-CODE }}.${{ inputs.REGION-CODE }}.tfvars"
        working-directory: "${{ env.TF_PATH}}"
      
      - name: Terraform apply
        run: terraform apply -input=false -no-color tfplan-percival
        continue-on-error: true
        working-directory: "${{ env.TF_PATH}}"

      - name: Deploy FastAPI Container app
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az containerapp create --resource-group pptst01sea-atm --name pptst01atmcoasea01 --image "${{ vars.DOCKER_REGISTRY_URL }}/${{ github.event.repository.name }}/fastapi:${{ env.VERSION_TAG }}" --registry-login-server ${{ vars.DOCKER_REGISTRY_URL }} --target-port 8000 --ingress external --environment pptst01atmcaesea01 --registry-identity ${{ vars.MI_RESOURCE_ID}} --user-assigned ${{ vars.MI_RESOURCE_ID}}
            $api_base_url = $(az containerapp show --name pptst01atmcoasea01 --resource-group pptst01sea-atm --query 'properties.configuration.ingress.fqdn' -o tsv)
            az containerapp creaste --resource-group pptst01sea-atm --name pptst01atmcoasea02 --environment pptst01atmcaesea01 --env-vars API_BASE_URL=$api_base_url --image "${{ vars.DOCKER_REGISTRY_URL }}/${{ github.event.repository.name }}/streamlit:${{ env.VERSION_TAG }}" --registry-login-server ${{ vars.DOCKER_REGISTRY_URL }} --target-port 8501 --ingress external --registry-identity ${{ vars.MI_RESOURCE_ID}} --user-assigned ${{ vars.MI_RESOURCE_ID}}

      # - name: Deploy FastAPI Container app
      #   uses: azure/container-apps-deploy-action@v1
      #   with:
      #     acrName: "pptst01atmacrsea01"
      #     imageToDeploy: ${{ vars.DOCKER-REGISTRY-URL }}/${{ github.event.repository.name }}/fastapi:${{ env.VERSION_TAG }}
      #     containerAppName: "pptst01atmcoasea01"
      #     resourceGroup: "pptst01sea-atm"
      #     containerAppEnvironment: "pptst01atmcaesea01"

      # - name: Deploy Streamlit Container app
      #   uses: azure/container-apps-deploy-action@v1
      #   with:
      #     acrName: "pptst01atmacrsea01"
      #     imageToDeploy: ${{ vars.DOCKER-REGISTRY-URL }}/${{ github.event.repository.name }}/streamlit:${{ env.VERSION_TAG }}
      #     containerAppName: "pptst01atmcoasea02"
      #     resourceGroup: "pptst01sea-atm"
      #     containerAppEnvironment: "pptst01atmcaesea01"
